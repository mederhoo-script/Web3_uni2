const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/browser-Crq3fMCd.js","assets/index-CRXhB-tn.js","assets/index-C5opNnue.css"])))=>i.map(i=>d[i]);
import{W as w,_ as o,c as d,n as u,b as a,U as c,R as g,d as l,h as p,ab as v,e as C,ac as f,S as y,f as P}from"./index-CRXhB-tn.js";class _ extends w{constructor(e){let{chains:t,options:r,connectorStorage:s}=e;const n={shimDisconnect:!0,...r};super({chains:t,options:n}),o(this,"id","frame"),o(this,"name","Frame"),o(this,"ready",!0),o(this,"shimDisconnectKey",`${this.id}.shimDisconnect`),o(this,"onAccountsChanged",i=>{i.length===0?this.emit("disconnect"):this.emit("change",{account:d(i[0])})}),o(this,"onChainChanged",i=>{const h=u(i),m=this.isChainUnsupported(h);this.emit("change",{chain:{id:h,unsupported:m}})}),o(this,"onDisconnect",()=>{this.emit("disconnect"),this.options.shimDisconnect&&this.connectorStorage.removeItem(this.shimDisconnectKey)}),this.connectorStorage=s}async connect(e){try{const t=await this.getProvider();if(!t)throw new a;this.setupListeners(),this.emit("message",{type:"connecting"});const r=await t.request({method:"eth_requestAccounts"}),s=d(r[0]);let n=await this.getChainId(),i=this.isChainUnsupported(n);return e?.chainId&&n!==e?.chainId&&(n=(await this.switchChain(e?.chainId)).chainId,i=this.isChainUnsupported(n)),this.options.shimDisconnect&&this.connectorStorage.setItem(this.shimDisconnectKey,"true"),{account:s,provider:t,chain:{id:n,unsupported:i}}}catch(t){throw this.isUserRejectedRequestError(t)?new c(t):t.code===-32002?new g(t):t}}async disconnect(){const e=await this.getProvider();e?.removeListener&&(e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),this.isInjected()||e.close(),this.options.shimDisconnect&&this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){const e=await this.getProvider();if(!e)throw new a;const t=await e.request({method:"eth_accounts"});return d(t[0])}async getChainId(){const e=await this.getProvider();if(!e)throw new a;const t=await e.request({method:"eth_chainId"});return u(t)}async getProvider(){return this._provider=this.isInjected()?this.injectedProvider():await this.createProvider(),this._provider}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[t,r]=await Promise.all([this.getProvider(),this.getAccount()]);return new l(t,e).getSigner(r)}async isAuthorized(){try{if(this.options.shimDisconnect&&!this.connectorStorage.getItem(this.shimDisconnectKey))return!1;if(!await this.getProvider())throw new a;return!!await this.getAccount()}catch{return!1}}async switchChain(e){const t=await this.getProvider();if(!t)throw new a;const r=p(e);try{return await Promise.all([t.request({method:"wallet_switchEthereumChain",params:[{chainId:r}]}),new Promise(s=>this.on("change",n=>{let{chain:i}=n;i?.id===e&&s()}))]),this.chains.find(s=>s.chainId===e)??{chainId:e,name:`Chain ${r}`,slug:`${r}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(s){const n=this.chains.find(i=>i.chainId===e);if(!n)throw new v({chainId:e,connectorId:this.id});if(s.code===4902)try{if(await t.request({method:"wallet_addEthereumChain",params:[{chainId:r,chainName:n.name,nativeCurrency:n.nativeCurrency,rpcUrls:C(n),blockExplorerUrls:this.getBlockExplorerUrls(n)}]}),await this.getChainId()!==e)throw new c(new Error("User rejected switch after adding network."));return n}catch(i){throw this.isUserRejectedRequestError(i)?new c(i):new f(i.message)}throw this.isUserRejectedRequestError(s)?new c(s):new y(s)}}async watchAsset(e){let{address:t,decimals:r=18,image:s,symbol:n}=e;const i=await this.getProvider();if(!i)throw new a;return i.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t,decimals:r,image:s,symbol:n}}})}async setupListeners(){const e=await this.getProvider();e.on&&(e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect))}isUserRejectedRequestError(e){return e.code===4001}injectedProvider(){return window?.ethereum}isInjected(){return!!this.injectedProvider()?.isFrame}async createProvider(){const e=(await P(async()=>{const{default:t}=await import("./browser-Crq3fMCd.js").then(r=>r.b);return{default:t}},__vite__mapDeps([0,1,2]))).default;return e("frame")}}export{_ as FrameConnector};

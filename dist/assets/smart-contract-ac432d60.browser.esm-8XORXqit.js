import{a as o,E as $,S as Z}from"./assertEnabled-d1700f0b.browser.esm-CuId8uDg.js";import{b as V,d,G as z,C as x,a as M}from"./contract-appuri-5c40af52.browser.esm-iXrARNet.js";import{ah as T,bL as J,bM as Q,A as f,bN as C,q as v,bK as X,m as p,T as A,bO as I,bP as N,bQ as O,bR as L,bS as S,bT as tt,bU as et,bV as rt,bW as at,bX as Y,bY as B,bZ as j,b_ as R,aq as k,b$ as nt,c0 as F,c1 as u,c2 as st,B as h,bz as _,c3 as it,v as l,Z as G,c as U,$ as K,aC as ot,a2 as ct,c4 as pt,a1 as H,bh as dt,i as mt,j as ut,aU as b,c5 as ht,an as lt,ax as gt,az as ft,av as At,ap as yt,bA as Wt,bi as wt,aA as Tt,ak as vt,J as Et,K as St,O as Pt}from"./index-CRXhB-tn.js";import{v as q}from"./index-CD3KUISV.js";import{C as xt}from"./contract-interceptor-d7b164a7.browser.esm-C_yNedqZ.js";import{C as bt,a as Ct}from"./contract-owner-49e75547.browser.esm-BuMVgBnJ.js";import{C as Rt}from"./contract-platform-fee-e756e68f.browser.esm-4_O3c1A9.js";import{C as Ft}from"./contract-roles-71988d2e.browser.esm-CBnW-SmK.js";import{C as Dt}from"./contract-sales-918c7cb8.browser.esm-JshavvlF.js";import{a as Mt}from"./erc-1155-7ce9bee1.browser.esm-DsYxGXv7.js";import{E as It}from"./erc-20-9a18a51c.browser.esm-DlwhiCEF.js";import{a as Nt}from"./erc-721-27306550.browser.esm-CWT_rSOk.js";import{M as Ot,a as Lt,b as kt}from"./marketplacev3-offers-ce1f096b.browser.esm-T2fVG3I6.js";import"./treeify-BwbAlYD3.js";import"./setErc20Allowance-7f76f677.browser.esm-DleMWaY1.js";import"./QueryParams-32a56510.browser.esm-CJ0DYI-a.js";import"./drop-claim-conditions-e6f2abbf.browser.esm-Dk2Ztl9z.js";import"./cleanCurrencyAddress-ded19cfe.browser.esm-9Eophd18.js";import"./marketplace-e3129e2f.browser.esm-BBiIxhg2.js";let g=function(m){return m[m.None=0]="None",m[m.AddAdmin=1]="AddAdmin",m[m.RemoveAdmin=2]="RemoveAdmin",m}({});const P={startDate:h.from(0),expirationDate:h.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},D=G({startDate:Z,expirationDate:$,nativeTokenLimitPerTransaction:ct.default(0),approvedCallTargets:ot([K(H),pt("*")])}),_t=K(G({signer:H,makeAdmin:dt(),permissions:D})),Ut=[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],qt=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];class Vt{featureName=u.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}hasDuplicateSigners(t){const e={},r=t.map(a=>a.signer);for(const a of r)if(!e[a])e[a]=!0;else return!0;return!1}parseSignerPermissionsStruct(t){return{startDate:new Date(parseInt(t.startTimestamp.toString())*1e3),expirationDate:new Date(parseInt(t.endTimestamp.toString())*1e3),nativeTokenLimitPerTransaction:h.from(t.nativeTokenLimitPerTransaction),approvedCallTargets:t.approvedTargets}}async sendSignerPermissionRequest(t,e,r){const{payload:a,signature:n}=await this.generatePayload(t,e,r);return A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[a,n]})}async generatePayload(t,e,r){const a={signer:t,isAdmin:r.valueOf(),approvedTargets:e.approvedCallTargets==="*"?[it]:e.approvedCallTargets,nativeTokenLimitPerTransaction:_(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:h.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:q(void 0)},n=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();v(s);const c=await this.contractWrapper.signTypedData(s,{name:"Account",version:"1",chainId:n,verifyingContract:this.getAddress()},{SignerPermissionRequest:qt},a);return{payload:a,signature:c}}async generateLegacyPayload(t,e){if(e.approvedCallTargets==="*")throw new Error("Wildcard call targets are not supported on legacy account permissions contract, please deploy an updated contract factory.");const r={signer:t,approvedTargets:e.approvedCallTargets,nativeTokenLimitPerTransaction:_(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:h.from(Math.floor(new Date(Date.now()+1e3*60*60*24*365*10).getTime()/1e3)),uid:q(void 0)},a=await this.contractWrapper.getChainID(),n=this.contractWrapper.getSigner();v(n);const s=await this.contractWrapper.signTypedData(n,{name:"Account",version:"1",chainId:a,verifyingContract:this.getAddress()},{SignerPermissionRequest:Ut},r);return{payload:r,signature:s}}async isAdmin(t){const e=await l(t);return await this.contractWrapper.read("isAdmin",[e])}async isSigner(t){const e=await l(t);return await this.contractWrapper.read("isActiveSigner",[e])}async getAllAdmins(){return await this.contractWrapper.read("getAllAdmins",[])}async getAllSigners(){const t=await this.contractWrapper.read("getAllActiveSigners",[]);return await Promise.all(t.map(async e=>{const r=e.signer,a=this.parseSignerPermissionsStruct(e);return{signer:r,permissions:a}}))}async getAllAdminsAndSigners(){const e=(await this.getAllAdmins()).map(a=>({isAdmin:!0,signer:a,permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:h.from(0),approvedCallTargets:[]}})),r=await this.getAllSigners();return[...e,...r]}grantAdminPermissions=p(async t=>{const e=await l(t);return await this.sendSignerPermissionRequest(e,P,g.AddAdmin)});revokeAdminPermissions=p(async t=>{const e=await l(t);return await this.sendSignerPermissionRequest(e,P,g.RemoveAdmin)});grantPermissions=p(async(t,e)=>{const r=await l(t),a=await D.parseAsync(e);return await this.sendSignerPermissionRequest(r,a,g.None)});updatePermissions=p(async(t,e)=>{const r=await l(t),a=await D.parseAsync(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot update permissions of an existing admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(r,a,g.None)});revokeAccess=p(async t=>{const e=await l(t);return await this.sendSignerPermissionRequest(e,{startDate:h.from(0),expirationDate:h.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},g.None)});approveTargetForSigner=p(async(t,e)=>{const r=await l(t),a=await l(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(n.approvedTargets.includes(e))throw new Error("Target is already approved");const s=[...n.approvedTargets,a];return await this.sendSignerPermissionRequest(r,{startDate:h.from(n.startTimestamp),expirationDate:h.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},g.None)});disapproveTargetForSigner=p(async(t,e)=>{const r=await l(t),a=await l(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(!n.approvedTargets.includes(a))throw new Error("Target is currently not approved");const s=n.approvedTargets.filter(c=>U(c)!==U(a));return await this.sendSignerPermissionRequest(r,{startDate:h.from(n.startTimestamp),expirationDate:h.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},g.None)});resetAllPermissions=p(async t=>{const e=await _t.parseAsync(t);if(this.hasDuplicateSigners(e))throw new Error("Duplicate signers found in input.");const r=[],a=[],n=[],s=await this.getAllAdmins(),c=e.filter(i=>i.makeAdmin).map(i=>i.signer);s.forEach(async i=>{if(!c.includes(i)){const w=(await this.sendSignerPermissionRequest(i,P,g.RemoveAdmin)).encode();r.push(w)}});const y=await this.getAllSigners(),E=e.filter(i=>!i.makeAdmin).map(i=>i.signer);await Promise.all(y.map(async i=>{if(!E.includes(i.signer)){const w=(await this.sendSignerPermissionRequest(i.signer,P,g.None)).encode();n.push(w)}}));for(const i of e)if(i.makeAdmin)(await this.sendSignerPermissionRequest(i.signer,P,g.AddAdmin)).encode();else{const w=(await this.sendSignerPermissionRequest(i.signer,i.permissions,g.None)).encode();a.push(w)}const W=[];return r.forEach(i=>{W.push(i)}),n.forEach(i=>{W.push(i)}),a.forEach(i=>{W.push(i)}),A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[W]})})}class Yt{featureName=F.name;constructor(t){this.contractWrapper=t,this.accountPermissions=this.detectAccountPermissions()}detectAccountPermissions(){if(d(this.contractWrapper,"AccountPermissions")||d(this.contractWrapper,"AccountPermissionsV1"))return new Vt(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async isAdmin(t){return o(this.accountPermissions,u).isAdmin(t)}async isSigner(t){return o(this.accountPermissions,u).isSigner(t)}async getAllAdmins(){return o(this.accountPermissions,u).getAllAdmins()}async getAllSigners(){return o(this.accountPermissions,u).getAllSigners()}async getAllAdminsAndSigners(){return o(this.accountPermissions,u).getAllAdminsAndSigners()}grantAdminPermissions=p(async t=>o(this.accountPermissions,u).grantAdminPermissions.prepare(t));revokeAdminPermissions=p(async t=>o(this.accountPermissions,u).revokeAdminPermissions.prepare(t));grantPermissions=p(async(t,e)=>o(this.accountPermissions,u).grantPermissions.prepare(t,e));updatePermissions=p(async(t,e)=>o(this.accountPermissions,u).updatePermissions.prepare(t,e));revokeAccess=p(async t=>o(this.accountPermissions,u).revokeAccess.prepare(t));approveTargetForSigner=p(async(t,e)=>o(this.accountPermissions,u).approveTargetForSigner.prepare(t,e));disapproveTargetForSigner=p(async(t,e)=>o(this.accountPermissions,u).disapproveTargetForSigner.prepare(t,e));resetAllPermissions=p(async t=>o(this.accountPermissions,u).resetAllPermissions.prepare(t))}class Bt{featureName=R.name;constructor(t){this.contractWrapper=t,this.events=new V(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async predictAccountAddress(t,e){let r=k("");return e&&(r=e),this.contractWrapper.read("getAddress",[t,r])}async getAssociatedAccounts(t){return this.contractWrapper.read("getAccountsOfSigner",[t])}async getAllAccounts(){return await this.contractWrapper.read("getAllAccounts",[])}async isAccountDeployed(t,e){const r=await this.predictAccountAddress(t,e);return nt(r,this.contractWrapper.getProvider())}createAccount=p(async(t,e)=>{if(await this.isAccountDeployed(t,e))throw new Error(`Account already deployed for admin: ${t}`);let r=k("");return e&&(r=e),A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAccount",args:[t,r],parse:a=>({address:this.contractWrapper.parseLogs("AccountCreated",a?.logs)[0].args.account,receipt:a})})})}function jt(m,t){const r=f.parse(m||[]).filter(n=>n.type==="event"),a=[];for(const n of r){const s=st(n.name,t,"events");a.push({inputs:n.inputs||[],outputs:n.outputs||[],name:n.name||"unknown",comment:s})}return a}class Gt{constructor(t,e){this.contractWrapper=t,this.storage=e}async get(){return this._cachedMetadata?this._cachedMetadata:(this._cachedMetadata=await T(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options),this._cachedMetadata)}async extractSources(){const t=await this.get();return J(t,this.storage)}async extractFunctions(){let t;try{t=await this.get()}catch{}return Q(f.parse(this.contractWrapper.abi),t?.metadata)}async extractEvents(){let t;try{t=await this.get()}catch{}return jt(f.parse(this.contractWrapper.abi),t?.metadata)}}class Kt{featureName=C.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.readContract.address}async getAll(){return await this.contractWrapper.readContract.getAllExtensions()}async get(t){return await this.contractWrapper.readContract.getExtension(t)}async getExtensionAddress(t){return(await this.get(t)).metadata.implementation}async getAllFunctions(t){return(await this.get(t)).functions}async getExtensionForFunction(t){let e=t.functionSelector;return e||(v(t.functionSignature),e=X(t.functionSignature).substring(0,10)),await this.contractWrapper.readContract.getMetadataForFunction(e)}async getExtensionAddressForFunction(t){return(await this.getExtensionForFunction(t)).implementation}add=p(async t=>A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionAdded",e.logs).length<1)throw new Error("No ExtensionAdded event found");const a=t.extensionAbi?f.parse(t.extensionAbi):(await T(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForAdd(a,t.extension),s=I([f.parse(this.contractWrapper.abi),n]);return this.contractWrapper.updateAbi(s),e}}));addDeployed=p(async t=>{let e=t.extensionAbi;e||(e=(await T(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),v(e);let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await N.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=O(f.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.add.prepare({extension:n,extensionAbi:e})});addPublished=p(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||L,e);return this.addDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});replace=p(async t=>A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"replaceExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionReplaced",e.logs).length<1)throw new Error("No ExtensionReplaced event found");const a=t.extensionAbi?f.parse(t.extensionAbi):(await T(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForRemove(f.parse(this.contractWrapper.abi),a),s=this.filterAbiForAdd(a,t.extension),c=I([n,s]);return this.contractWrapper.updateAbi(c),e}}));replaceDeployed=p(async t=>{let e=t.extensionAbi;e||(e=(await T(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),v(e);let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await N.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=O(f.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.replace.prepare({extension:n,extensionAbi:e})});replacePublished=p(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||L,e);return this.replaceDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});remove=p(async t=>{const e=await this.getExtensionAddress(t.extensionName);return A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"removeExtension",args:[t.extensionName],parse:async r=>{if(this.contractWrapper.parseLogs("ExtensionRemoved",r.logs).length<1)throw new Error("No ExtensionRemoved event found");const n=(await T(e,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,s=this.filterAbiForRemove(f.parse(this.contractWrapper.abi),n);return this.contractWrapper.updateAbi(s),r}})});filterAbiForAdd(t,e){const r=new S(t),a=e.functions.map(s=>s.functionSelector);return t.filter(s=>{const c=Object.values(new S([s]).functions);if(c.length===0)return!1;const y=r.getSighash(c[0]);return a.includes(y)})}filterAbiForRemove(t,e){const r=new S(t),a=new S(e),n=Object.values(a.functions).map(c=>a.getSighash(c));return t.filter(c=>{const y=Object.values(new S([c]).functions);if(y.length===0)return!1;const E=r.getSighash(y[0]);return!n.includes(E)})}async deployExtension(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const a=await tt(e,t,r,this.contractWrapper.storage,this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),n=await et(a.metadataUri,this.contractWrapper.storage,this.contractWrapper.getProvider(),"",this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),s=n.find(i=>i.type==="implementation")?.transaction.predictedAddress,c=n.filter(i=>i.transaction.data&&i.transaction.data.length>0),y=c.filter(i=>i.type!=="infra").map(i=>i.transaction),E=c.filter(i=>i.type==="infra").map(i=>i.transaction),W=this.contractWrapper.getSigner();v(W),await rt(W,E,{});for(const i of y)try{await at(W,i)}catch(w){console.debug(`Error deploying contract at ${i.predictedAddress}`,w?.message)}return{deployedExtensionAddress:s,extensionMetadata:a.metadataUri}}}class Ht{featureName=Y.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC20",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(c=>({recipient:c.args.recipient,amount:c.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class $t{featureName=B.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC721",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(c=>({recipient:c.args.recipient,tokenId:c.args.tokenId.toNumber()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class Zt{featureName=j.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>A.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC1155",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(c=>({recipient:c.args.recipient,tokenId:c.args.tokenId.toNumber(),amount:c.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class ge{get abi(){return f.parse(this.contractWrapper.abi||[])}get royalties(){return o(this.detectRoyalties(),lt)}get roles(){return o(this.detectRoles(),gt)}get sales(){return o(this.detectPrimarySales(),ft)}get platformFees(){return o(this.detectPlatformFees(),At)}get owner(){return o(this.detectOwnable(),yt)}get erc20(){return o(this.detectErc20(),Wt)}get erc721(){return o(this.detectErc721(),wt)}get erc1155(){return o(this.detectErc1155(),Tt)}get app(){return o(this.detectApp(),vt)}get directListings(){return o(this.detectDirectListings(),Et)}get englishAuctions(){return o(this.detectEnglishAuctions(),St)}get offers(){return o(this.detectOffers(),Pt)}get airdrop20(){return o(this.detectAirdrop20(),Y)}get airdrop721(){return o(this.detectAirdrop721(),B)}get airdrop1155(){return o(this.detectAirdrop1155(),j)}get accountFactory(){return o(this.detectAccountFactory(),R)}get account(){return o(this.detectAccount(),F)}get extensions(){return o(this.detectBaseRouter(),C)}get chainId(){return this._chainId}constructor(t,e,r,a){let n=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{},s=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new mt(t,e,r,n,a);this._chainId=s,this.storage=a,this.contractWrapper=c,this.events=new V(this.contractWrapper),this.encoder=new ut(this.contractWrapper),this.interceptor=new xt(this.contractWrapper),this.estimator=new z(this.contractWrapper),this.publishedMetadata=new Gt(this.contractWrapper,this.storage),this.metadata=new x(this.contractWrapper,b,this.storage)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}prepare(t,e,r){return A.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}detectRoyalties(){if(d(this.contractWrapper,"Royalty")){const t=new x(this.contractWrapper,b,this.storage);return new bt(this.contractWrapper,t)}}detectRoles(){if(d(this.contractWrapper,"Permissions"))return new Ft(this.contractWrapper,ht)}detectPrimarySales(){if(d(this.contractWrapper,"PrimarySale"))return new Dt(this.contractWrapper)}detectPlatformFees(){if(d(this.contractWrapper,"PlatformFee"))return new Rt(this.contractWrapper)}detectErc20(){if(d(this.contractWrapper,"ERC20"))return new It(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if(d(this.contractWrapper,"ERC721"))return new Nt(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if(d(this.contractWrapper,"ERC1155"))return new Mt(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if(d(this.contractWrapper,"Ownable"))return new Ct(this.contractWrapper)}detectApp(){const t=new x(this.contractWrapper,b,this.storage);if(d(this.contractWrapper,"AppURI"))return new M(this.contractWrapper,t,this.storage);if(d(this.contractWrapper,"ContractMetadata"))return new M(this.contractWrapper,t,this.storage)}detectDirectListings(){if(d(this.contractWrapper,"DirectListings"))return new Ot(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(d(this.contractWrapper,"EnglishAuctions"))return new Lt(this.contractWrapper,this.storage)}detectOffers(){if(d(this.contractWrapper,"Offers"))return new kt(this.contractWrapper,this.storage)}detectBaseRouter(){if(d(this.contractWrapper,C.name))return new Kt(this.contractWrapper)}detectAirdrop20(){if(d(this.contractWrapper,"AirdropERC20"))return new Ht(this.contractWrapper)}detectAirdrop721(){if(d(this.contractWrapper,"AirdropERC721"))return new $t(this.contractWrapper)}detectAirdrop1155(){if(d(this.contractWrapper,"AirdropERC1155"))return new Zt(this.contractWrapper)}detectAccountFactory(){if(d(this.contractWrapper,R.name))return new Bt(this.contractWrapper)}detectAccount(){if(d(this.contractWrapper,F.name))return new Yt(this.contractWrapper)}}export{ge as SmartContract};
